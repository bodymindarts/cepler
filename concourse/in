#!/bin/bash

set -e
set -x

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

export TMPDIR=${TMPDIR:-/tmp}
payload=$TMPDIR/cepler-resource-request

cat > $payload <&0

export GIT_URL=$(jq -r '.source.uri // ""' < $payload)
export GIT_BRANCH=$(jq -r '.source.branch // ""' < $payload)
set +x
export GIT_PRIVATE_KEY=$(jq -r '.source.private_key // ""' < $payload)
set -x
environment=$(jq -r '.source.environment // ""' < $payload)
deployment_no=$(jq -r '.version.deployment_no // ""' < $payload)

destination=${1}

set +e
next_deployment_no=$(cepler --clone ${destination} check -e ${environment})
res=$?
set -e
if [[ "${next_deployment_no}" != "${deployment_no}" ]]; then
  echo "Cannot fetch 'deployment_no ${deployment_no}' - Next 'deployment_no ${next_deployment_no}'"
  exit 1
fi

cd ${destination}
cepler prepare -e ${environment} --force-clean

echo "{ \"version\": { \"deployment_no\": \"${deployment_no}\" } }" >&3
